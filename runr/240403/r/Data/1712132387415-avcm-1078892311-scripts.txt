# Saved at 8/30/2021 22:45:21 pm

# Saved at 1/18/2024 23:47:56 pm<span title="1/18/2024 23:47:56 pm">A2</span>
fav_fruit<-c(35,30,10,25,40,5)
barplot(fav_fruit,horiz=TRUE,names.arg=c("Apple","Orange","Banana","Kiwi","Blueberry","Grape"),main="Favorite Fruit_by_Nadia_Scott",xlab= "Number of people",ylab="Type of Fruit" ,
col=c("Green","Orange","Yellow","Brown","Blue","Red"))# Saved at 1/22/2024 10:59:58 am<span title="1/22/2024 10:59:58 am">A2 </span>
fav_fruit<-c(35,30,10,25,40,5)
barplot(fav_fruit,horiz=TRUE,names.arg=c("Apple","Orange","Banana","Kiwi","Blueberry","Grape"),
main="Fav_Fruit_by_Shanel_Palacios_Sotelo",ylab="number of people",xlab="days",
col=c("green","orange","yellow","brown","blue","red"))# Saved at 1/29/2024 0:08:55 am<span title="1/29/2024 0:08:55 am">BOX PLOTS LECTURE 4</span>
M<-c(55, 30, 1, 10, 50, 80, 52, 45, 45, 35, 40, 31, 40, 100, 2, 54, 120)
S<-c(95, 80, 1, 30, 50 ,60, 55, 70 ,55, 62, 101, 65, 69, 68, 66, 1)
boxplot(M,S,horiz=TRUE,main="Side-by-side Boxplots",names=c("Boxplot for M","Boxplot for S"),col=c("purple","blue"))
# Saved at 1/31/2024 0:32:31 am<span title="1/31/2024 0:32:31 am">A3 (01/30/2024)</span>
M<-c(6,1,3,4,7,8,3,5,6,8)
S<-c(7,1,10,12, 0, 10, 15, 20, 60)
boxplot(M,S,horiz=TRUE,main="Two Boxplots for Comparison_Shanel_Palacios_Sotelo",names=c("Boxplot for M","Boxplot for S"),col=c("orange","red"))
# Saved at 2/14/2024 0:10:51 am<span title="2/14/2024 0:10:51 am">Lecture 7 QUESTION 1</span>
cherry_tree<-data.frame("girth"=c(8.6,10.5,11.4,14,16.3),
"height"=c(65,72,76,78,77), "volume"=c(10.3,16.4,21.4,35.5,42.6))
girth<-cherry_tree$girth
height<-cherry_tree$height
volume<-cherry_tree$volume
M1=lm(volume~girth+height, data=cherry_tree)
summary(M1)
plot(M1$residuals)
print("Predicted the volume of a black cherry tree that has a girth of 18.2 inches and a height of 72 inches.")
predict(M1, data.frame(girth=18.2, height=72))
# Saved at 3/25/2024 10:47:32 am<span title="3/25/2024 10:47:32 am">WEEK MARCH 25 </span>
data<-c(135, 110, 111, 133, 126, 119, 138, 124, 126, 125, 120, 120, 123, 131, 128, 119, 135, 123, 137, 114, 119, 130, 125, 136, 125, 121, 130, 132, 113, 130)
p=.5
q=.5
n=250
sd<-sqrt(p*q)
se<-sd/sqrt(n)
x1<-135/250; x2<-110/250; x3<-111/250; x4<-133/250; x5<-126/250; x6<-119/250; x7<-138/250; x8<-124/250; x9<-126/250; x10<-125/250; x11<-120/250; x12<-120/250; x13<-123/250; x14<-131/250; x15<-128/250; x16<-119/250; x17<-135/250; x18<-123/250; x19<-137/250; x20<-114/250; x21<-119/250; x22<-130/250; x23<-125/250; x24<-136/250; x25<-125/250; x26<-121/250; x27<-130/250; x28<-132/250; x29<-113/250; x30<-130/250;
Sample_means<-c(x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15, x16, x17, x18, x19, x20, x21, x22, x23, x24, x25, x26, x27, x28, x29, x30)
print("Sample means")
Sample_means
z1<-(x1-p)/se; z2<-(x2-p)/se; z3<-(x3-p)/se; z4<-(x4-p)/se; z5<-(x5-p)/se; z6<-(x6-p)/se; z7<-(x7-p)/se; z8<-(x8-p)/se; z9<-(x9-p)/se; z10<-(x10-p)/se; z11<-(x11-p)/se; z12<-(x12-p)/se; z13<-(x13-p)/se; z14<-(x14-p)/se; z15<-(x15-p)/se; z16<-(x16-p)/se; z17<-(x17-p)/se; z18<-(x18-p)/se; z19<-(x19-p)/se; z20<-(x20-p)/se; z21<-(x21-p)/se; z22<-(x22-p)/se; z23<-(x23-p)/se; z24<-(x24-p)/se; z25<-(x25-p)/se; z26<-(x26-p)/se; z27<-(x27-p)/se; z28<-(x28-p)/se; z29<-(x29-p)/se; z30<-(x30-p)/se; Sample_zscores<-c(z1, z2, z3, z4, z5, z6, z7, z8, z9, z10, z11, z12, z13, z14,z15, z16, z17, z18, z19, z20, z22, z23, z24, z25, z26, z27, z28, z29, z30)
print("Sample z-scores")
Sample_zscores
hist(Sample_means, breaks=c(.44,.46,.48,.50,.52,.54,.56))
hist(Sample_zscores, freq=FALSE, breaks=c(-3,-2,-1,0,1,2, 3))
curve(dnorm(x, mean=0, sd=1), col= "blue", add=TRUE)
# Saved at 3/25/2024 10:57:17 am<span title="3/25/2024 10:57:17 am">A9 MARCH 25</span>
#We create a population of voters of size n, where p% are in support and q=(1-p)% are against #some issue.  We want to take k samples of size s(surveys of size s) and then 
#look at a frequency histograms of our sample means and a density(i.e. probability) histogram #for our sample z-scores. For each sample, the sample mean is taken as the proportion of #voters  that support the issue.
 #In our population 1="Support" and 0="Against".
p<-.35
q<-.65
n<-18000000
k<-1000
s<-40
sample_size<-s
pop_size<-n
population<-c(rep(1, p*(pop_size)), rep(0,q*(pop_size)))
se<-sd(population)/(sqrt( sample_size))
mean<-mean(population)
#se
print("mean")
mean
print("standard deviation")
sqrt(p*q)
# Take samples of size s without replacement.
sample<-sample(population, sample_size)
sample_mean<-sum(sample)/sample_size
sample_zscore<-(sample_mean-mean)/(se)
sample_sum<- sum(sample)


sample_means <- rep(NA, k)

for(i in 1:k){
 sample<-sample(population, sample_size)
   sample_means[i] <- sum(sample)/sample_size
sample_zscore[i]<-((sum(sample)/sample_size)-mean)/(se)
sample_sum[i] <- sum(sample)
   }
print("Sample sums")
sample_sum
print("Sample means")
sample_means
print("Sample z-scores")
sample_zscore

hist(sample_means)
hist(sample_zscore, freq=FALSE)

curve(dnorm(x, mean=0, sd=1), 
      col="darkblue", add=TRUE)
# Saved at 4/3/2024 1:19:47 am<span title="4/3/2024 1:19:47 am">A10</span>
Myurl<-"https://docs.google.com/spreadsheets/d/e/2PACX-1vRrt6e8SFhy_t5KbCHpb54MkzmT81vMIW7J8WQ9SGabb5u8ZISHaDN9xaStFRyfLiQqj70DKP497WLr/pub?output=csv" 
Mass_Shooting_Data_2022<-read.csv(url(Myurl))
head(Mass_Shooting_Data_2022)
state<-Mass_Shooting_Data_2022$State
killed<-Mass_Shooting_Data_2022$Victims.Killed
injured<-Mass_Shooting_Data_2022$Victims.Injured
head(state)
date<-Mass_Shooting_Data_2022$Incident.Date
#head(date)
#remove numbers from date.
date<-gsub('[0-9]+', '', date)
#removes "-" from date.
date<-gsub('-','', date)
#removes "," from date.
date<-gsub(' ,','', date)
#removes spaces from date.
date<-gsub(' ','', date)

#head(date)
head(date)


 #Positions where data  has "January"
Positions= which(date=="January"| date=="Jan")
Jan_Mass_Shootings<-date[Positions]
Jan_Killings<-killed[Positions]
Jan_Injuries<-injured[Positions]
#Jan_Mass_Shootings
Number_Jan_Mass_shootings=length(Jan_Mass_Shootings)
Total_Jan_Killings<-sum(Jan_Killings)
Total_Jan_injuries<-sum(Jan_Injuries)

print("Total number of mass shooting killings in January")
Total_Jan_Killings

print("Total number  of mass shooting injuries in January 2022.")
Total_Jan_injuries

print("Number of mass shootings in January 2022.")
Number_Jan_Mass_shootings

 #Positions where date  has "February"
Positions= which(date=="February"| date=="Feb")
Feb_Mass_Shootings<-date[Positions]
Feb_Killings<-killed[Positions]
Feb_Injuries<-injured[Positions]
#Feb_Mass_Shootings
Number_Feb_Mass_shootings=length(Feb_Mass_Shootings)
Total_Feb_Killings<-sum(Feb_Killings)
Total_Feb_injuries<-sum(Feb_Injuries)

print("Total number of mass shooting killings in February 2022.")
Total_Feb_Killings

print("Total number  of mass shooting injuries in February 2022.")
Total_Feb_injuries

print("Number of mass shootings in February 2022.")
Number_Feb_Mass_shootings

 #Positions where data  has "March"
Positions= which(date=="March"| date=="Mar")
Mar_Mass_Shootings<-date[Positions]
Mar_Killings<-killed[Positions]
Mar_Injuries<-injured[Positions]

Number_Mar_Mass_shootings=length(Mar_Mass_Shootings)
Total_Mar_Killings<-sum(Mar_Killings)
Total_Mar_injuries<-sum(Mar_Injuries)

print("Total number of mass shooting killings in March 2022")
Total_Mar_Killings

print("Total number  of mass shooting injuries in March 2022.")
Total_Mar_injuries

print("Number of mass shootings in March 2022.")
Number_Mar_Mass_shootings


#Positions where data  has "April"
Positions= which(date=="April"| date=="Apr")
Apr_Mass_Shootings<-date[Positions]
Apr_Killings<-killed[Positions]
Apr_Injuries<-injured[Positions]
Number_Apr_Mass_shootings=length(Apr_Mass_Shootings)
Total_Apr_Killings<-sum(Apr_Killings)
Total_Apr_injuries<-sum(Apr_Injuries)

print("Total number of mass shooting killings in April 2022")
Total_Apr_Killings

print("Total number  of mass shooting injuries in April 2022.")
Total_Apr_injuries

print("Number of mass shootings in April 2022.")
Number_Apr_Mass_shootings


#Positions where data  has "May"
Positions= which(date=="May")
May_Mass_Shootings<-date[Positions]
May_Killings<-killed[Positions]
May_Injuries<-injured[Positions]
Number_May_Mass_shootings=length(May_Mass_Shootings)
Total_May_Killings<-sum(May_Killings)
Total_May_injuries<-sum(May_Injuries)

print("Total number of mass shooting killings in May 2022")
Total_May_Killings

print("Total number  of mass shooting injuries in May 2022.")
Total_May_injuries

print("Number of mass shootings in May 2022.")
Number_May_Mass_shootings


#Positions where data  has "June"
Positions= which(date=="June"| date=="Jun")
Jun_Mass_Shootings<-date[Positions]
Jun_Killings<-killed[Positions]
Jun_Injuries<-injured[Positions]
Number_Jun_Mass_shootings=length(Jun_Mass_Shootings)
Total_Jun_Killings<-sum(Jun_Killings)
Total_Jun_injuries<-sum(Jun_Injuries)

print("Total number of mass shooting killings in June 2022")
Total_Jun_Killings

print("Total number  of mass shooting injuries in June 2022.")
Total_Jun_injuries

print("Number of mass shootings in June 2022.")
Number_Jun_Mass_shootings

#Positions where date  has "July"
Positions= which(date=="July"| date=="Jul")
Jul_Mass_Shootings<-date[Positions]
Jul_Killings<-killed[Positions]
Jul_Injuries<-injured[Positions]
Number_Jul_Mass_shootings=length(Jul_Mass_Shootings)
Total_Jul_Killings<-sum(Jul_Killings)
Total_Jul_injuries<-sum(Jul_Injuries)

print("Total number of mass shooting killings in July 2022")
Total_Jul_Killings

print("Total number  of mass shooting injuries in July 2022.")
Total_Jul_injuries

print("Number of mass shootings in July 2022.")
Number_Jul_Mass_shootings
 
#Positions where data_  has "August"
Positions= which(date=="August"| date=="Aug")
Aug_Mass_Shootings<-date[Positions]
Aug_Killings<-killed[Positions]
Aug_Injuries<-injured[Positions]
Number_Aug_Mass_shootings=length(Aug_Mass_Shootings)
Total_Aug_Killings<-sum(Aug_Killings)
Total_Aug_injuries<-sum(Aug_Injuries)

print("Total number of mass shooting killings in August 2022")
Total_Aug_Killings

print("Total number  of mass shooting injuries in August 2022.")
Total_Aug_injuries

print("Number of mass shootings in August 2022.")
Number_Aug_Mass_shootings








 #Positions where date  has "September"
Positions= which(date=="September" | date=="Sep")
 Sep_Mass_Shootings<-date[Positions]
Sep_Killings<-killed[Positions]
Sep_Injuries<-injured[Positions]
Number_Sep_Mass_shootings=length(Sep_Mass_Shootings)
Total_Sep_Killings<-sum(Sep_Killings)
Total_Sep_injuries<-sum(Sep_Injuries)

print("Total number of mass shooting killings in September 2022")
Total_Sep_Killings

print("Total number  of mass shooting injuries in September 2022.")
Total_Sep_injuries

print("Number of mass shootings in September 2022.")
Number_Sep_Mass_shootings

 #Positions where date  has "October"
Positions= which(date=="October" | date=="Oct")
 Oct_Mass_Shootings<-date[Positions]
Oct_Killings<-killed[Positions]
Oct_Injuries<-injured[Positions]
Number_Oct_Mass_shootings=length(Oct_Mass_Shootings)
Total_Oct_Killings<-sum(Oct_Killings)
Total_Oct_injuries<-sum(Oct_Injuries)

print("Total number of mass shooting killings in October 2022")
Total_Oct_Killings

print("Total number  of mass shooting injuries in October 2022.")
Total_Oct_injuries

print("Number of mass shootings in October 2022.")
Number_Oct_Mass_shootings


 #Positions where date  has "November"
Positions= which(date=="November"| date=="Nov")
Nov_Mass_Shootings<-date[Positions]
Nov_Killings<-killed[Positions]
Nov_Injuries<-injured[Positions]
Number_Nov_Mass_shootings=length(Nov_Mass_Shootings)
Total_Nov_Killings<-sum(Nov_Killings)
Total_Nov_injuries<-sum(Nov_Injuries)

print("Total number of mass shooting killings in November 2022")
Total_Nov_Killings

print("Total number  of mass shooting injuries in November 2022.")
Total_Nov_injuries

print("Number of mass shootings in November 2022.")
Number_Nov_Mass_shootings

 #Positions where date  has "December"
Positions= which(date=="December"| date=="Dec")
Dec_Mass_Shootings<-date[Positions]
Dec_Injuries<-injured[Positions]
Dec_Killings<-injured[Positions]

Number_Dec_Mass_shootings=length(Dec_Mass_Shootings)
Total_Dec_Killings<-sum(Dec_Killings)
Total_Dec_injuries<-sum(Dec_Injuries)

print("Total number of mass shooting killings in December 2022")
Total_Dec_Killings

print("Total number of mass shooting injuries in December 2022.")
Total_Dec_injuries

print("Number of mass shootings in December 2022.")
Number_Dec_Mass_shootings



number_mass_shootings_by_month<-c(Number_Jan_Mass_shootings,
Number_Feb_Mass_shootings,Number_Mar_Mass_shootings,Number_Apr_Mass_shootings,Number_May_Mass_shootings,Number_Jun_Mass_shootings,Number_Jul_Mass_shootings,Number_Aug_Mass_shootings,Number_Sep_Mass_shootings,Number_Oct_Mass_shootings,Number_Nov_Mass_shootings,Number_Dec_Mass_shootings)
number_mass_shootings_by_month

X=c("Jan.", "Feb.","Mar", "Apr", "May", "June", "July","Aug.", "Sep", "Oct","Nov","Dec")

number_mass_shootings_by_month<-c(Number_Jan_Mass_shootings,
Number_Feb_Mass_shootings,Number_Mar_Mass_shootings,Number_Apr_Mass_shootings,Number_May_Mass_shootings,Number_Jun_Mass_shootings,Number_Jul_Mass_shootings,Number_Aug_Mass_shootings,Number_Sep_Mass_shootings,Number_Oct_Mass_shootings,Number_Nov_Mass_shootings,Number_Dec_Mass_shootings)
print("Number of mass shootings  by month in 2020.")
number_mass_shootings_by_month


number_injuries_by_month<-c(Total_Jan_injuries, Total_Feb_injuries, Total_Mar_injuries, Total_Apr_injuries, Total_May_injuries, Total_Jun_injuries, Total_Jul_injuries, Total_Aug_injuries, Total_Sep_injuries, Total_Oct_injuries, Total_Nov_injuries, Total_Dec_injuries)
print("Number of injuries by month in 2022.")
number_injuries_by_month

number_Killings_by_month<-c(Total_Jan_Killings, Total_Feb_Killings, Total_Mar_Killings, Total_Apr_Killings, Total_May_Killings, Total_Jun_Killings, Total_Jul_Killings, Total_Aug_Killings, Total_Sep_Killings, Total_Oct_Killings, Total_Nov_Killings, Total_Dec_Killings)

print("Number of mass shooting killings by month in 2020.")
number_Killings_by_month


number_mass_shootings_by_month
C=rbind(number_mass_shootings_by_month, number_injuries_by_month, number_Killings_by_month)

bplot<-barplot(C, col=c("red","yellow","blue"), main="2022 Mass Shooting data", ylab="Mass Shooting info by month", xaxt="n",beside=T )
bplot=bplot[2,]
axis(1, at=bplot, cex.axis=1, labels=X, tck=0)
legend("topright", legend = c("Shootings", "Injured","Killed"), fill = c("red", "yellow","blue"))
